 
version: 2.1 # Use v2.1 to enable orb usage.

# The Windows orb gives you everything you
# need to start using the Windows executor.
orbs:
  win: circleci/windows@2.2.0

jobs:
  hello: # name of your job
    executor: win/default # executor type

    steps:
      # Commands are run in a Windows
      # virtual machine environment
      - checkout
      - run: Write-Host 'Hello, Windows'
  
  nukeeper:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Install nukeeper and create logfile directory
          command: |
            dotnet tool install nukeeper --global
            mkdir -p ~/logs/
      - attach_workspace:
          at: ~/
      - run:
          name: nukeeper inspect 
            # 1. nukeeper inspects the .csproj or .sln file in this current direcory and write the output to a file
            # 2. reading the content of the logfile
            # 3. checking if the logfile specify any possible package(s) that needs update, then returning error if there is possible update, and no error if no update
          command: | 
            #$splitfile = Get-Content '%OutdatedNuGetPackagesToIgnore%' | ForEach-Object {($_ -split '\r?\n') }
            $splitfile = ForEach-Object {('%OutdatedNuGetPackagesToIgnore%' -split ',') }
            echo $splitfile
            $excludePackages = [String]::Join('|^', $splitfile)
            echo $excludePackages

            #mkdir logs
            #nukeeper inspect --exclude $excludePackages > NuGetOutOfDate.html

            $File = nukeeper inspect --exclude $excludePackages
            $FileLine = @()
            Foreach ($Line in $File) {
             $MyObject = New-Object -TypeName PSObject
             Add-Member -InputObject $MyObject -Type NoteProperty -Name rStats -Value $Line
             $FileLine += $MyObject
            }
            $FileLine | ConvertTo-Html | Out-File NuGetOutOfDate.html

            Get-Content NuGetOutOfDate.html

            echo '##teamcity[file=NuGetOutOfDate.html]'

            $SEL = select-string -path "NuGetOutOfDate.html" -pattern "^0 possible"
            if ($SEL -ne $null)
            {
              echo "##teamcity[message text='Out-of-date NuGet packages not found']"
              echo "Out-of-date NuGet packages not found"
              #exit 0
            }
            elseif ('%ErrorWhenPackagesOutOfDate%' -eq 'true')
            {
              echo "##teamcity[buildStatus status='Error' text='Out-of-date NuGet packages found']"
              #echo "##teamcity[publishArtifacts 'NuGetOutOfDate.zip']"
              echo "Out-of-date NuGet packages found"
              #exit 1
            }
            echo "##teamcity[publishArtifacts 'NuGetOutOfDate.html => NuGetOutOfDate.zip']"
             }

workflows:
  default:
    jobs:
      - hello
      - nukeeper:
          requires: [hello]
